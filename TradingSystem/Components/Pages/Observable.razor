@page "/MessageBus"
@using TradingSystem.Logic
@inject IObservable observable

<link rel="stylesheet" href="Styles/ObservableStyle.css">

<div class="container">
    <h2 class="page-title">Message Bus Monitor</h2>

    <!-- Subscribers Section -->
    <h3 class="section-title">Subscribers</h3>
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>Key</th>
                    <th>Subscribers (Sorted)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entry in _subscribers)
                {
                    <tr>
                        <td>@entry.Key</td>
                        <td>@string.Join(", ", entry.Value)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Persistent Messages Section -->
    <h3 class="section-title">Persistent Messages on the Bus</h3>
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>Key</th>
                    <th>Message</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entry in _persistentMessages)
                {
                    <tr>
                        <td>@entry.Key</td>
                        <td class="message-container">@entry.Value</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Transient Messages Section -->
    <h3 class="section-title">Transient Messages on the Bus</h3>
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>Key</th>
                    <th>Messages (FIFO Order)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entry in _transientMessages)
                {
                    <tr>
                        <td>@entry.Key</td>
                        <td>
                            @foreach (var msg in entry.Value)
                            {
                                <div class="message-container">@msg</div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private Dictionary<string, List<string>> _subscribers = new();
    private Dictionary<string, object> _persistentMessages = new();
    private Dictionary<string, List<object>> _transientMessages = new();

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private void RefreshData()
    {
        _subscribers = observable.GetSubscribers();
        _persistentMessages = observable.GetPersistentMessages();
        _transientMessages = observable.GetTransientMessages();
        StateHasChanged();

        const int threeSecondsInMilliseconds = 3000;
        Task.Delay(threeSecondsInMilliseconds).ContinueWith(_ => InvokeAsync(RefreshData));
    }
}
